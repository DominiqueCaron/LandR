% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/defaultData.R
\name{assignPresences}
\alias{assignPresences}
\title{Assign presences to patches based on a raster or presence
probabilities}
\usage{
assignPresences(
  assignProb,
  landscape,
  pixToConvert = NULL,
  probWeight = 1,
  numStartsDenom = 10
)
}
\arguments{
\item{assignProb}{a SpatRaster of presence probabilities}

\item{landscape}{a SpatRaster of the entire lanscape with NAs outside
patches}

\item{pixToConvert}{numeric. Number of pixels to convert to presence
across \code{landscape}. If \code{NULL}, \code{round(sum(!is.na(landscape[]))/2)}
pixels will be converted to presences.}

\item{probWeight}{numeric. If \code{pixToConvert} cannot be reached
\code{assignProb} will be weighted using \code{assignProb^probWeight}
and the algorothm will try again.}

\item{numStartsDenom}{integer. Used to calculate the number of starting pixels
to assign presences (at each try; as \code{pixToConvert/numStartsDenom})}
}
\value{
a SpatRaster
}
\description{
Assign presences to patches based on a raster or presence
probabilities
}
\details{
This function attempts to iteratively assign
presences starting in \code{pixToConvert/numStartsDenom} pixels
sampled from areas with high probabilities in \code{assignProb} (weighted if
\code{probWeight != 1}).
For each starting pixel, it assigns a maximum of \code{numStartsDenom * probWeight}
pixels. If not enough pixels are assigned presences (i.e. the number of
presences does not reach \code{pixToConvert}), the function tries again
after increasing \code{assignProb} by a factor of \code{1.5} (with values > 1 capped at 1).
If too many pixels are assigned presences, pixels are sampled according to
\code{assignProb ^ 10} (where \code{assignProb} corresponds to the original supplied values.)
}
